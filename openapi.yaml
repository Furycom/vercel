openapi: 3.1.0
info:
  title: Supabase Proxy API
  version: 12.2.3
servers:
  - url: https://verceltest999.vercel.app
paths:
  /test:
    get:
      operationId: getTestRecords
      summary: Get all records from the "test" table
      parameters:
        - name: select
          in: query
          required: false
          description: Columns to return (e.g. *)
          schema:
            type: string
      responses:
        '200':
          description: List of records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/test'
    post:
      operationId: createTestRecord
      summary: Create a new record in the "test" table
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/testInput'
      responses:
        '201':
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/test'
    patch:
      operationId: updateTestRecord
      summary: Update an existing record in the "test" table
      parameters:
        - name: id
          in: query
          required: true
          description: Filter by ID (e.g. eq.2)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/testInput'
      responses:
        '204':
          description: No content
    delete:
      operationId: deleteTestRecord
      summary: Delete a record from the "test" table
      parameters:
        - name: id
          in: query
          required: true
          description: Filter by ID (e.g. eq.2)
          schema:
            type: string
      responses:
        '204':
          description: No content

  /technicien_supabase:
    get:
      operationId: getTechnicienSupabaseRecords
      summary: Get all records from the "technicien_supabase" table
      parameters:
        - name: select
          in: query
          required: false
          description: Columns to return (e.g. *)
          schema:
            type: string
      responses:
        '200':
          description: List of records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/technicien_supabase'
    post:
      operationId: createTechnicienSupabaseRecord
      summary: Create a new record in the "technicien_supabase" table
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/technicienSupabaseInput'
      responses:
        '201':
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/technicien_supabase'
    patch:
      operationId: updateTechnicienSupabaseRecord
      summary: Update an existing record in the "technicien_supabase" table
      parameters:
        - name: id
          in: query
          required: true
          description: Filter by ID (e.g. eq.2)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/technicienSupabaseInput'
      responses:
        '204':
          description: No content
    delete:
      operationId: deleteTechnicienSupabaseRecord
      summary: Delete a record from the "technicien_supabase" table
      parameters:
        - name: id
          in: query
          required: true
          description: Filter by ID (e.g. eq.2)
          schema:
            type: string
      responses:
        '204':
          description: No content

components:
  schemas:
    test:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        texte:
          type: string
    testInput:
      type: object
      required:
        - texte
      properties:
        texte:
          type: string
    technicien_supabase:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        name:
          type: string
        memory:
          type: object
        updated_at:
          type: string
          format: date-time
    technicienSupabaseInput:
      type: object
      required:
        - name
        - memory
      properties:
        name:
          type: string
        memory:
          type: object
